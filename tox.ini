[tox]
package = wheel
wheel_build_env = .pkg
requires =
    tox>=4
env_list = lint, type, py{38,39,310,311,312,py}, cover
minversion = 4.6.0
skipsdist = True


[flake8]
extend-ignore = E741
extend-exclude = .vscode,.github,old,build,dist
#max-complexity = 10


[deps]
py3x =
    parameterized >= 0.9.0


[coverage:run]
omit = tests/*


[coverage:report]
show_missing = true
include = py65emu/*
omit = tests/*


[base]
setenv =
    PYTHONPATH = {toxinidir}:{toxinidir}/py65emu
pytest = python -m unittest -v -b {posargs}
pycov = python -m coverage run -m unittest {posargs}
pylint = python -m flake8 -v {posargs:.}
pyformat = python -m black -v {posargs:.}
pytype = python -m mypy {posargs:ispconfig}


[testenv]
whitelist_externals =
    echo
    false
# This and the next few testenvs are a workaround for
# https://github.com/tox-dev/tox/issues/2858.
commands =
    echo "Unrecognized environment name {envname}"
    false


[testenv:py{37,38,39,310,311,312,py}]
description = run the tests
deps = -rrequirements.txt
    {[deps]py3x}
commands = {[base]pytest}


[testenv:cover]
description = run the tests coverage
coverage_report = python -m coverage report
coverage_xml = python -m coverage xml -o "cov.xml"
deps = -rrequirements.txt
    {[deps]py3x}
    coverage >= 7
commands =
    {[base]pycov}
    {[testenv:cover]coverage_report} --fail-under 99
    {[testenv:cover]coverage_xml} --fail-under 99


[testenv:format]
description = run formatter
skip_install = true
deps =
    black >= 22.12
commands = {[base]pyformat}


[testenv:lint]
description = run linters
skip_install = true
deps =
    flake8 >= 6.1.0
commands = {[base]pylint}


[testenv:type]
description = run type checks
deps = -rrequirements.txt
    {[deps]requests-mock}
    mypy >= 0.991
commands = {[base]pytype}


