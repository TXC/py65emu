name: Build & maybe upload PyPI package

on:
  push:
    branches: [master]
    tags: ["*"]
  release:
    types:
      - published
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

jobs:
  build-package:
    name: Build & verify package
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v4
        with:
          python-version: 3.12
      - name: Install dependencies
        run: |
          python -m pip install --upgrade build twine
      - name: Build package
        run: python -m build .
      - name: Check package
        run: python -m twine check dist/*
      - name: Archive artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Packages
          path: dist

  # Upload to Test PyPI on every commit on main.
  release-test-pypi:
    name: Publish in-dev package to test.pypi.org
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build-package

    steps:
      - name: Download package artifact
        uses: actions/download-artifact@v3
        with:
          name: Packages
          path: dist

      - name: Upload package to Test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository-url: https://test.pypi.org/legacy/

  release-pypi:
    name: Publish released package to pypi.org
    if: github.event.action == 'published'
    runs-on: ubuntu-latest
    needs: build-package

    steps:
      - name: Download package artifact
        uses: actions/download-artifact@v3
        with:
          name: Packages
          path: dist

      - name: Upload package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          repository-url: https://test.pypi.org/legacy/
