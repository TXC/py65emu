name: Build & maybe upload PyPI package

on:
  push:
    branches: [master]
    tags: ["*"]
  release:
    types:
      - published
  workflow_run:
    workflows: ["Tests"]
    branches: [master]
    types:
      - completed
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

jobs:
  build-package:
    name: Build & verify package
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v4
        with:
          python-version: 3.12

      - name: Install dependencies
        run: |
          python -m pip install --upgrade build twine

      - name: Set Environment Variables
        run: echo "GIT_HASH=$(git rev-parse --short "$GITHUB_SHA")" >> $GITHUB_ENV
#        git_hash=$(git rev-parse --short "$GITHUB_SHA")
#        git_branch=${GITHUB_REF#refs/heads/}

      - name: Set Unique Version
        if: ${{ github.event.action != 'published' }}
        run: sed -i -E "s/^version = \"([0-9\.]+)\"$/version = \"\1-$GIT_HASH\"/" pyproject.toml

      - name: Build package
        run: python -m build .

      - name: Check package
        run: python -m twine check dist/*

      - name: Archive artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Packages
          path: dist

  # Upload to Test PyPI on every commit on main.
  release-test-pypi:
    name: Publish in-dev package to test.pypi.org
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: build-package
    environment:
      name: testpypi
      url: https://pypi.org/p/py65emu

    steps:
      - name: Download package artifact
        uses: actions/download-artifact@v3
        with:
          name: Packages
          path: dist

      - name: Upload package to Test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/

  release-pypi:
    name: Publish released package to pypi.org
    if: github.event.action == 'published'
    runs-on: ubuntu-latest
    needs: build-package
    environment:
      name: pypi
      url: https://pypi.org/p/py65emu

    #env:
    #  DV_NEW_VERSION: ""
    #  DV_VERSION_BUMP: ""
    #  DV_CURRENT_VERSION: ""
    #  DV_DEV_VERSION: "False"

    steps:
      - name: Download package artifact
        uses: actions/download-artifact@v3
        with:
          name: Packages
          path: dist

      - name: Upload package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
